
Price data:

Daily Wholesale price data (min, max)

Weekly Retail Prices 2005-2014, (10 weeks ommitted; for some products sparse)

Monthly Retail Prices;

Missing values: Replication, Interpolation

Inputs: Daily wholesale prices (find out relationships)

Time Series Analysis: Seasonality effects
Neural Networks; Feed Forward (shortterm: one step) Recurrent Neural Networks: Echo State Network (which is actually easy to train)

Price Transmission Analysis to find out correlations between prices => to figure out inputs

Twitter:
2 approaches:
updated keyword list

1) include Indian times
extracting users: 4-5 million a day through one app => filter

2)
food + attribute

implement simple filter in spark
and a VirtualMachine that has every tool we need installed

Azure: 50 min to download one month from archive

Replication of a list of twitter users
Filter tweets by keywords (Spark)

filter out retweets, otherwise not feasible

==> Really cool distributed Big Data thingy

Indonesia:
bahasa indonesia keywords
bing API for translation

How to use EPFL server:


Update:
one machine for getting all tweets per day - hadoop cluster
33 million users; 1 per day average

Product:

Map with (poverty index per region [tweets per inhabitants])


icdatasvr

azure:
35 GB on disk + external 127GB
ubuntu node, create image for software
management utility is cross-platform

weird: use sudo to write to disk


Combining different methods through Bagging or plugging them into a network


